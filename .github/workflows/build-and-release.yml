name: 构建与发布

on:
  release:
    types: [created]
  workflow_dispatch:  # 允许手动触发工作流
    inputs:
      version:
        description: '版本号 (例如: v1.0.0)'
        required: true
        default: 'v1.0.0'
      prerelease:
        description: '是否为预发布版本'
        required: true
        type: boolean
        default: false

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        
      - name: 设置Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          
      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: 确保cookie.json存在
        run: |
          if (-not (Test-Path -Path "./cookie.json")) {
            '""' | Out-File -FilePath "./cookie.json" -Encoding utf8
          }
          
      - name: 准备构建脚本
        run: |
          # 确保build_exe.py中包含ebooklib.epub
          (Get-Content build_exe.py) | ForEach-Object {
            if ($_ -match "--hidden-import=ebooklib',") {
              $_ -replace "--hidden-import=ebooklib',", "--hidden-import=ebooklib',`n    '--hidden-import=ebooklib.epub',  # 明确导入epub子模块"
            } else {
              $_
            }
          } | Set-Content build_exe.py
          
      - name: 构建Windows可执行文件
        run: |
          python build_exe.py
          
      - name: 压缩Windows可执行文件
        run: |
          Compress-Archive -Path dist/番茄小说下载器.exe -DestinationPath Fanqie-Novel-Downloader-Windows.zip
          
      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: Fanqie-Novel-Downloader-Windows.zip
          
      - name: 上传至已存在的Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: Fanqie-Novel-Downloader-Windows.zip

  # 为MacOS构建
  build-macos:
    runs-on: macos-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        
      - name: 设置Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          
      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: 确保cookie.json存在
        run: |
          if [ ! -f "./cookie.json" ]; then
            echo '""' > "./cookie.json"
          fi
          
      - name: 准备构建脚本
        run: |
          # 修改为macOS格式的路径分隔符
          sed -i '' 's/--add-data=2.py;./--add-data=2.py:./' build_exe.py
          sed -i '' 's/--add-data=cookie.json;./--add-data=cookie.json:./' build_exe.py
          
          # 确保包含ebooklib.epub
          if ! grep -q -- "--hidden-import=ebooklib.epub" build_exe.py; then
            sed -i '' 's/--hidden-import=ebooklib'"'"',/--hidden-import=ebooklib'"'"',\n    '"'"'--hidden-import=ebooklib.epub'"'"',  # 明确导入epub子模块/' build_exe.py
          fi
          
      - name: 构建MacOS可执行文件
        run: |
          python build_exe.py
          
      - name: 压缩MacOS可执行文件
        run: |
          cd dist && zip -r ../Fanqie-Novel-Downloader-MacOS.zip 番茄小说下载器
          
      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: Fanqie-Novel-Downloader-MacOS.zip
          
      - name: 上传至已存在的Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: Fanqie-Novel-Downloader-MacOS.zip

  # 为Linux构建
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        
      - name: 设置Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          
      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: 确保cookie.json存在
        run: |
          if [ ! -f "./cookie.json" ]; then
            echo '""' > "./cookie.json"
          fi
          
      - name: 准备构建脚本
        run: |
          # 修改为Linux格式的路径分隔符
          sed -i 's/--add-data=2.py;./--add-data=2.py:./' build_exe.py
          sed -i 's/--add-data=cookie.json;./--add-data=cookie.json:./' build_exe.py
          
          # 确保包含ebooklib.epub
          if ! grep -q -- "--hidden-import=ebooklib.epub" build_exe.py; then
            sed -i 's/--hidden-import=ebooklib'"'"',/--hidden-import=ebooklib'"'"',\n    '"'"'--hidden-import=ebooklib.epub'"'"',  # 明确导入epub子模块/' build_exe.py
          fi
          
      - name: 构建Linux可执行文件
        run: |
          python build_exe.py
          
      - name: 压缩Linux可执行文件
        run: |
          cd dist && zip -r ../Fanqie-Novel-Downloader-Linux.zip 番茄小说下载器
          
      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: Fanqie-Novel-Downloader-Linux.zip
          
      - name: 上传至已存在的Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: Fanqie-Novel-Downloader-Linux.zip

  # 创建发布版本
  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: 下载Windows构建产物
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          
      - name: 下载MacOS构建产物
        uses: actions/download-artifact@v4
        with:
          name: macos-build
          
      - name: 下载Linux构建产物
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          
      - name: 创建Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: Fanqie Novel Downloader ${{ github.event.inputs.version }}
          body: |
            Fanqie Novel Downloader ${{ github.event.inputs.version }} Release
            
            ### Features
            - Download novels from Fanqie and export as TXT or EPUB format
            - Support multi-threaded downloading for acceleration
            - Automatically fix ebooklib.epub module import issues
            
            ### Downloads
            - Windows: Fanqie-Novel-Downloader-Windows.zip
            - macOS: Fanqie-Novel-Downloader-MacOS.zip
            - Linux: Fanqie-Novel-Downloader-Linux.zip
          files: |
            Fanqie-Novel-Downloader-Windows.zip
            Fanqie-Novel-Downloader-MacOS.zip
            Fanqie-Novel-Downloader-Linux.zip
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}