name: 构建应用程序

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: # 允许手动触发

permissions:
  contents: read

jobs:
  build-desktop:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置 Python 环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: 确保 cookie.json 存在
        run: |
          if [ ! -f "cookie.json" ]; then
            echo '""' > "cookie.json"
          fi

      - name: 使用 PyInstaller 构建可执行文件
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            pyinstaller --onefile --windowed --add-data "cookie.json;." --name=FanqieNovelDownloader gui.py
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            pyinstaller --windowed --add-data "cookie.json:." --name=FanqieNovelDownloader gui.py
          else
            pyinstaller --onefile --add-data "cookie.json:." --name=FanqieNovelDownloader gui.py
          fi

      - name: 压缩构建产物
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            Compress-Archive -Path dist/FanqieNovelDownloader.exe -DestinationPath Fanqie-Novel-Downloader-Windows.zip
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            cd dist && zip -r ../Fanqie-Novel-Downloader-MacOS.zip FanqieNovelDownloader.app
          else
            cd dist && zip -r ../Fanqie-Novel-Downloader-Linux.zip FanqieNovelDownloader
          fi

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: Fanqie-Novel-Downloader-*.zip

  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置 Java 环境
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 设置 Android SDK
        uses: android-actions/setup-android@v2
        with:
          sdk-version: '33'
          ndk-version: '25.1.8937393'

      - name: 设置 Python 环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: 安装 Buildozer 和依赖
        run: |
          python -m pip install --upgrade pip
          pip install cython
          pip install buildozer
          pip install -r requirements.txt

      - name: 生成 buildozer.spec
        run: |
          buildozer init
          sed -i 's/title = My Application/title = Fanqie Novel Downloader/' buildozer.spec
          sed -i 's/package.name = myapp/package.name = fanqie_novel_downloader/' buildozer.spec
          sed -i 's/source.include_exts = py,png,jpg,kv,atlas/source.include_exts = py,png,jpg,kv,atlas,json,txt/' buildozer.spec
          echo "requirements = $(cat requirements.txt | tr '\n' ',')" >> buildozer.spec

      - name: 构建 Android APK
        run: |
          buildozer android debug

      - name: 上传 APK
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: bin/*.apk
